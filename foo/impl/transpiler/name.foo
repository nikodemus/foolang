---
Selector mangling for transpiler.

Underscores written as __.
Symbols prefixed with _ and translated using SymbolNames.
Keyword parts suffixed with _.
---

define SymbolNames
    { "+" -> "_add",
      "*" -> "_mul",
      "/" -> "_div",
      "-" -> "_sub",
      "%" -> "_mod",
      "=" -> "_eq",
      ">" -> "_gt",
      "<" -> "_lt",
      "^" -> "_up",
      "#" -> "_xx"
      }!

define ColonCharacter
    ":" character!

class Name { out }
    is Object

    direct method _new
        self out: StringOutput new!

    direct method mangleSelector: selector::Selector
        let s = self _new.
        s out print: "FOO_".
        s _mangleSelector: selector.
        s content!

    direct method mangleStandardMethod: selector::Selector
        let s = self _new.
        s out print: "foo_method_".
        s _mangleSelector: selector.
        s content!

    direct method mangleMethod: aMethod
        let s = self _new.
        s _mangleMethod: aMethod.
        s content!

    direct method mangleMetaclass: aClass id: id
        let s = self _new.
        s _mangleMetaclass: aClass id: id.
        s content!

    direct method mangleClass: aClass id: id
        let s = self _new.
        s _mangleClass: aClass id: id.
        s content!

    direct method mangleName: name
        let s = self _new.
        s _mangleName: name.
        s content!

    direct method mangleGlobal: aVar id: n
        let s = self _new.
        s _mangleGlobal: aVar id: n.
        s content!

    direct method mangleDynamic: aVar
        let s = self _new.
        s _mangleDynamic: aVar.
        s content!

    method content
        out content!

    method _mangleDynamic: aVar
        out print: "FooDynamic_".
        out print: aVar name!

    method _mangleGlobal: aVar id: n
        out print: "FooGlobal".
        out print: n.
        out print: "_".
        out print: aVar name!

    method _mangleMetaclass: aClass id: id
        -- KLUDGE: This method exists because in the compiler
        -- our object modeling is incomplete: AstClass represents
        -- both the metaclass and the class.
        --
        -- KLUDGE: Class is its own metaclass, and has direct
        -- definition in C.
        aClass name == "Class"
            ifTrue: { return out print: "FooClass_Class" }.
        self _mangleClass: aClass id: id.
        out print: "_classOf"!

    method _mangleClass: aClass id: id
        out print: "FooClass".
        out print: id.
        out print: "_".
        self _mangleName: aClass name!

    method _mangleMethod: aMethod
        out print: (aMethod isDirect
                        ifTrue: { "fooDirectMethod_" }
                        ifFalse: { "fooInstanceMethod_" }).
        out print: aMethod home name.
        out print: "_".
        self _mangleSelector: aMethod selector toSelector!

    method _mangleSelector: selector::Selector
        selector isPrefix
            ifTrue: { out print: "_".
                      return self _mangleSymbol: selector }.
        selector isSymbol
            ifTrue: { return self _mangleSymbol: selector }.
        selector isKeyword
            ifTrue: { return self _mangleKeyword: selector }.
        self _mangleUnary: selector!

    method _mangleSymbol: selector
        selector name
            do: { |each|
                  out print: (SymbolNames
                                  at: each
                                  ifNone: { each }) }!

    method _mangleUnary: selector
        self _mangleName: selector name!

    method _mangleKeyword: selector
        (selector name splitBy: ColonCharacter) butlast
            do: { |each|
                  self _mangleName: each.
                  out print: "_" }!

    method _mangleName: name::String
        name do: { |s|
                   s == " "
                       ifTrue: { out print: "__" }
                       ifFalse: { s == "_"
                                      ifTrue: { out print: s }.
                                  out print: s } }!
end
