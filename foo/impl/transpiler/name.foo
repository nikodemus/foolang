---
Selector mangling for transpiler.

Underscores written as __.
Symbols prefixed with _ and translated using SymbolNames.
Keyword parts suffixed with _.
---

define SymbolNames
    { "+" -> "add",
      "*" -> "mul",
      "/" -> "div",
      "-" -> "sub",
      "%" -> "mod" }!

class Name {}
    is Object

    direct method mangle: selector prefix: prefix
        StringOutput
            with: { |out|
                    out print: prefix.
                    selector isSymbol
                        ifTrue: { self _mangleSymbol: selector to: out }.
                    selector isUnary
                        ifTrue: { self _mangleUnary: selector to: out }.
                    selector isKeyword
                        ifTrue: { self _mangleKeyword: selector to: out } }!

    direct method mangle: selector
        self mangle: selector prefix: ""!

    direct method mangleMethod: selector in: aClass
        "foomethod_{aClass name}_{self mangle: selector}"!

    direct method mangleVtable: aClass
        "FooVtable_{aClass name}"!

    direct method _mangleSymbol: selector to: out
        out print: "_".
        out print: (SymbolNames at: selector name)!

    direct method _mangleUnary: selector to: out
        self _mangleName: selector name to: out!

    direct method _mangleKeyword: selector to: out
        selector parts
            do: { |part|
                  self _mangleName: (part butlast) to: out.
                  out print: "_" }!

    direct method _mangleName: name to: out
        name do: { |s|
                   s == "_" ifTrue: { out print: s }.
                   out print: s }!

    direct method displayOn: out
        out print: "Name selector: {selector}"!
end
