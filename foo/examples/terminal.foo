
define Esc (Character code: 0x1B) string!

define Foreground
    { red: "{Esc}[31m",
      default: "{Esc}[39m" }!

define TerminalCommand
    { switchToAlternateScreen: "{Esc}[?1049h",
      switchToMainScreen: "{Esc}[?1049l" }!

class Control {}
    direct method key: string
        (string codeAt: 1) bitAnd: 0x1f!
end

class Main { input output exitBlock }
    direct method run: command in: system
        (self system: system)
              run!

    direct method system: system
        self input: system input
             output: system output
             exitBlock: { system exit }!

    method red: string
        StringOutput
            with: { |out|
                    out writeString: Foreground red.
                    out writeString: string.
                    out writeString: Foreground default }!

    method run
        { self setup.
          self mainLoop }
        finally: { self cleanup }!

    method setup
        input
            ; echo: False
            ; buffering: False.
        output
            processed: False.
        output writeString: TerminalCommand switchToAlternateScreen!

    method mainLoop
        self println: "Press Ctrl-q to exit.".
        let quit = Control key: "q".
        {
            let char = self readChar.
            char isControlCharacter
                ifTrue: { self println: "-> {char code}" }
                ifFalse: { self println: "-> {char code} ({self red: char string})" }.
            char code is quit
        }
            whileFalse!

    method cleanup
        output writeString: TerminalCommand switchToMainScreen!

    method println: line
        output print: line.
        output print: "\r\n"!

    method exit
        self cleanup.
        exitBlock value!

    method readChar
        input readChar_onEof: { self exit }!
end
