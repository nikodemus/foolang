import .test_iterable.TestIterable

class TestArray { assert }
    is TestSuite

    method equalityCases
        [[ [1,2,3], [1,2,3], True ],
         [ [1, 2, [3, 4]], [1, 2, [3, 4]], True ],
         [ [1, 2, 4], [1, 2, 3], False ],
         [ [1, 2, 3, 4], [1, 2, 3], False ],
         [ ["one", 2, 3], [1, "two", 3], False ]]!

    method testEquality
        assert forAll: self equalityCases
               that: { |case|
                       (case first == case second) is case third }
               testing: "Array#=="!

    method sortingCases
        [[ [], [] ],
         [ [1], [1] ],
         [ [1, 1], [1, 1] ],
         [ [1, 2], [1, 2] ],
         [ [2, 1], [1, 2] ],
         [ [1, 2, 3], [1, 2, 3] ],
         [ [3, 2, 1], [1, 2, 3] ],
         [ [2, 1, 3], [1, 2, 3] ],
         [ [1, 3, 2], [1, 2, 3] ],
         [ [9, 2, 1, 8, 7, 3, 5, 4, 6, 0],
           [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] ]]!

    method testSort
        assert forAll: self sortingCases
               that: { |case|
                       case first sort == case second }
               testing: "Array#sort return value".
        assert forAll: self sortingCases
               that: { |case|
                       case first sort.
                       case first == case second }
               testing: "Array#sort side effect"!

    method reverseCases
        [[ [], [] ],
         [ [1], [1] ],
         [ [1, 2], [2, 1] ],
         [ [1, 2, 3], [3, 2, 1] ]]!

    method testReverse
        assert forAll: self reverseCases
               that: { |case|
                       case first reverse == case second }
               testing: "Array#reverse return value".
        assert forAll: self reverseCases
               that: { |case|
                       case first reverse.
                       case first == case second }
               testing: "Array#reverse side effect"!

    method testReversed
        assert forAll: self reverseCases
               that: { |case|
                       case first reversed == case second }
               testing: "Array#reversed return value".
        assert forAll: self reverseCases
               that: { |case|
                       let orig = case first copy.
                       case first reversed.
                       case first == orig }
               testing: "Array#reversed no side effect"!
end

class TestArrayAsIterable { assert }
    is TestIterable

    method make: elements
        Array from: elements!
end
