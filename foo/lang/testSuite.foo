import .list.List
import .exception.*
import .output_ext

interface TestSuite
    direct method runTests: assert in: system
        (self assert: assert) runTestsIn: system!

    method runTestsIn: system
        self doTests: { |each| self runTest: each in: system }.
        self!

    method runTest: test in: system
        let start = system clock time.
        system output print: "- ".
        system output print: test name.
        system output flush.
        test sendTo: self with: [].
        let stop = system clock time.
        system output println: " ({(stop-start) real decimalString: 1}s)"!

    method doTests: block
        let list = List new.
        self __doSelectors: { |selector|
                              (selector startsWith: "test")
                                  ifTrue: { list add: selector } }.
        list isEmpty
            ifTrue: { Error raise: "Not tests for {self}!" }.
        list sort do: block.
        self!
end
