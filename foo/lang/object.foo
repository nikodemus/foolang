-- Should this be "Standard" or "StandardObject" instead?

-- Should be able to specify non-inherited methods for
-- cases like #default. (direct method?)
interface Object
    direct method default
        self is Object
            ifTrue: { False }
            ifFalse: { Error raise: "No default value for {self}" }!

    direct method isEquivalent: other
        self is other!

    direct method == other -> Boolean
        self is other!

    method isEquivalent: other
        self is other!

    method == other -> Boolean
        (Self includes: other)
            ifTrue: { self isEquivalent: other }
            ifFalse: { False }!

    direct method printOn: stream
        stream print: self toString!

    direct method displayOn: stream
        self printOn: stream!

    method printOn: stream
        stream print: self toString!

    method displayOn: stream
        self printOn: stream!

    method displayString
        let out = StringOutput new.
        self displayOn: out.
        out content!

    method checkEqual: other
        (Self includes: other)
            ifTrue: { return self checkEqualInternal: other }.
        self mismatch: other!

    method checkEqualInternal: other
        self == other
            ifFalse: { self mismatch: other }!

    method debug
        self toString!

    method mismatch: other
        let err = StringOutput new.
        err print: self debug.
        err print: " <==> ".
        err print: other debug.
        Error raise: "Mismatch: {err content}"!

    -- FIXME: Would be infinitely preferable for the host to handle this
    direct method perform: selector with: arguments
        DoesNotUnderstand
            raise: (Selector new: selector)
            with: arguments
            on: self!

    method perform: selector with: arguments
        DoesNotUnderstand
            raise: (Selector new: selector)
            with: arguments
            on: self!
end

extend Class
    is Object
end

extend Interface
    is Object
end
