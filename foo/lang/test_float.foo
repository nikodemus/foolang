class TestFloat { assert }
    is TestSuite

    method test_toString
        assert forAll: [{f: 0.0, s: "0.0"},
                        {f: 1.0, s: "1.0"},
                        {f: 20.0, s: "20.0"},
                        {f: 2123.0, s: "2123.0"},
                        {f: -2.0, s: "-2.0"},
                        {f: 0.01, s: "0.01"}]
               that: { |case|
                       case f toString == case s }
               testing: "Float#toString"!

    method test_prefix_minus
        assert forAll: [{x: 1.01, neg: -1.01},
                        {x: -1.01, neg: 1.01}]
               that: { |case|
                       -(case x) == case neg }
               testing: "Float#prefix-"!

    method test_floatMul
        assert true: { 6.0 == (2.0 floatMul: 3.0) }!

    method test_floatAdd
        assert true: { 32.1 == ((2.0 floatAdd: 30.0) floatAdd: 0.1) }!

    method test_floatSub
        assert true: { 9.9 == (10.0 floatSub: 0.1) }!

    method test_floatDiv
        assert true: { 4.0 == (8.0 floatDiv: 2.0) }!

    method test_floatMul
        assert true: { 0.0 == (0.0 floatMul: 10.0) }.
        assert true: { 22.0 == (11.0 floatMul: 2.0) }!

    method test_floatEq
        assert true: { 1.0 floatEq: 1.0 }.
        assert false: { 1.0 floatEq: 2.0 }!

    method test_float_is
        assert true: { 1.0 is (0.5 + 0.5) }.
        assert false: { 1.0 is 0.00 }!

    method test_floatGt
        assert true: { 2.0 floatGt: 1.0 }.
        assert false: { 1.0 floatGt: 2.0 }.
        assert false: { 1.0 floatGt: 1.0 }!

    method test_floatGte
        assert true: { 2.0 floatGte: 2.0 }.
        assert false: { 1.0 floatGte: 2.0 }.
        assert true: { 1.0 floatGte: 1.0 }!

    method test_floatLt
        assert false: { 2.0 floatLt: 1.0 }.
        assert true: { 1.0 floatLt: 2.0 }.
        assert false: { 1.0 floatLt: 1.0 }!

    method test_FloatLte
        assert false: { 2.0 floatLte: 1.0 }.
        assert true: { 1.0 floatLte: 2.0}.
        assert true: { 1.0 floatLte: 1.0 }!

    method test_plus
        assert forAll: [{a: 1.42, b: 2.2, sum: 3.62},
                        {a: 0.0, b: 112.123, sum: 112.123},
                        {a: -0.1, b: -1.0, sum: -1.1}]
               that: { |case|
                       case a + case b == case sum }
               testing: "Float#+"!

    method test_truncate
        assert forAll: [[132.999, 132],
                        [-123.999, -123]]
               that: { |case|
                       (case first truncate) is (case second) }
               testing: "Float#round"!

    method test_round
        assert forAll: [[132.999, 133],
                        [123.49, 123],
                        [-123.999, -124]]
               that: { |case|
                       (case first round) is (case second) }
               testing: "Float#round"!

    method test_decimalString
        assert forAll: [[1.01, "1.0"],
                        [1.11, "1.1"],
                        [1.54, "1.5"],
                        [1.56, "1.6"],
                        [-1.01, "-1.0"],
                        [-1.11, "-1.1"],
                        [-1.54, "-1.5"],
                        [-1.56, "-1.6"]]
               that: { |case|
                       (case first decimalString: 1) == case second }
               testing: "Float#decimalString:"!
end
