define ASCII
    {space: 0x20,
     tab: 0x09,
     lineFeed: 0x0A,
     formFeed: 0x0C,
     carriageReturn: 0x0D}
end

define WhitespaceASCII
    [ASCII space,
     ASCII tab,
     ASCII lineFeed,
     ASCII formFeed,
     ASCII carriageReturn]
end

import .object.Object

-- FIXME: support unicode range
class Character { code }
    is Object
    method isAlphanumeric
        self isAlpha or: self isDigit
    method isAlpha
        (0x41 <= code and: code <= 0x5A)
            ifFalse: { 0x61 <= code and: code <= 0x7A }
    method isWhitespace
        WhitespaceASCII anySatisfy: { |whitespaceCode| whitespaceCode is code }
    method isDigit
        0x30 <= code and: code <= 0x39
    method digit
        self isDigit ifTrue: { code - 0x30 }
    method isEquivalent: other
        code is other code
    method toString
        "#<Character code: {code}>"
end
