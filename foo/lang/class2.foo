import .object.Object
import .exception.TypeError
import .exception.Error
import .layout_ext.*
import .stringOutput.StringOutput
import .any.Any

class _ConstructorName {}
    direct method forSlots: slots
        slots
            ifEmpty: { return #new }.
        (StringOutput
             with: { |out|
                     slots
                         do: { |each|
                               out print: each name.
                               out print: ":" } })
        toSelector!
end

extend Class
    is Object

    method displayOn: stream
        stream writeString: self name!

    method typecheck: value
        -- Output debug println: "{self} typecheck: {value}".
        (self includes: value)
            ifTrue: { value }
            ifFalse: { TypeError
                           raise: value
                           expected: self }!

    method new: name
           slots: slots
           interfaces: interfaces
           directMethods: directMethods
           instanceMethods: instanceMethods
        let interfaces = (interfaces contains: Any)
                             ifTrue: { interfaces }
                             ifFalse: { interfaces append: [Any] }.
        let layout = Layout new: (slots size).
        let ctor = layout constructorMethod: (_ConstructorName forSlots: slots).
        slots doWithIndex: { |each index|
                             each index is index
                                 assert: "Slot index must match slot position".
                             each layout: layout }.
        let metaclass = Class
                            subclass: "{name} classOf"
                            interfaces: (interfaces collect: #classOf)
                            methods: (directMethods append: [ctor]).
        let readers = (slots reject: #isPrivate)
                          collect: { |each|
                                     layout readerMethod: each name toSelector
                                            for: each index }.
        metaclass
            new: name
            layout: layout
            interfaces: interfaces
            methods: (instanceMethods append: readers)!
end
