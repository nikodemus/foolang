import .impl.environment.Environment
import .impl.environment.BuiltinDictionary
import .impl.utils.FileModuleDictionary
import .impl.ast

class Main {}
    direct method run: command in: system
        let path = system files / command first.
        let mods = FileModuleDictionary
                       new: { "lang" -> system files / "foo/lang",
                              "impl" -> system files / "foo/impl",
                              "lib" -> system files / "foo/lib" }.
        let baseEnv = Environment modules: mods.
        let builtins = BuiltinDictionary dictionary: baseEnv builtins.
        builtins define: Dictionary.
        let userEnv = baseEnv load: path readString.
        (userEnv global: "Main")
            value run: command rest in: system!
end
