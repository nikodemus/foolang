#!/usr/bin/env bash
set -eo pipefail

if [ -z "$WINDIR" ]; then
    EXT=""
else
    EXT=".exe"
fi

set -u

mkdir -p bin/
BOOTSTRAP_INTERPRETER=bin/bootstrap-interpreter$EXT
BOOTSTRAP_COMPILER=bin/bootstrap-foo$EXT
TARGET0=bin/foo0$EXT
TARGET1=bin/foo$EXT

trap "./beep.sh" EXIT

# Overwrite default "unknown" with git version.
V=foo/lang/build_info.foo
echo '-- Generated by bootstrap.sh, do not commit this version!'  > $V
echo '-- This will be automatically replaced by the default '    >> $V
echo '-- "unknown-version" once bootstrap.sh has finished.'      >> $V
echo 'define Version'                  >> $V
echo '    "'$(git describe --tags)'"!' >> $V

trap "git checkout --quiet HEAD foo/lang/build_info.foo > /dev/null" EXIT

if [[ "$@" != "--skip-interpreter-build" ]]; then
    rm -f $BOOTSTRAP_INTERPRETER
    cargo build
    mv -v target/debug/bootstrap-interpreter$EXT  $BOOTSTRAP_INTERPRETER
    echo "$BOOTSTRAP_INTERPRETER ok"
fi

time $BOOTSTRAP_INTERPRETER foo/foo.foo -- --compile foo/foo.foo
mv -v foo/foo$EXT $BOOTSTRAP_COMPILER
rm -rf bootstrap-c
cp -a c bootstrap-c
echo "$BOOTSTRAP_COMPILER ok"

time $BOOTSTRAP_COMPILER --compile foo/foo.foo
mv -v foo/foo$EXT $TARGET0
rm -rf target0-c
cp -a c target0-c
echo "$TARGET0 ok"

time $TARGET0 --compile foo/foo.foo
mv -v foo/foo$EXT $TARGET1
rm -rf target1-c
cp -a c target1-c
echo "$TARGET1 ok"

if diff --recursive --brief target0-c target1-c; then
    echo "Foolang bootstrapped, enjoy quietly!"
else
    echo "Foolang bootstrap complete, but builds differ: tread carefully!"
fi

echo "Foolang binary: $TARGET1"
